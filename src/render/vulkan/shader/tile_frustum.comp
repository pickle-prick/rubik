#version 450

layout(local_size_x=4, local_size_y=4, local_size_z=1) in;

struct Plane
{
    vec3 N; // Plane normal
    float d; // Distance to origin
};

Plane plane_from_p(vec3 p0, vec3 p1, vec3 p2)
{
    Plane ret;

    vec3 v0 = p1 - p0;
    vec3 v2 = p2 - p0;

    ret.N = normalize(cross(v0,v2));

    // compute the distance to the origin using p0
    ret.d = dot(ret.N, p0);
    return ret;
}

// the back and/or front planes can be computed from min/max depth values from fragments within this group 
struct Frustum
{
    Plane planes[4]; // left,right,top,bottom frustum planes
};

void main()
{

}
